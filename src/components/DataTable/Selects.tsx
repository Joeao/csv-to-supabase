import { useContext, type JSX } from "react";

import DataContext from "@/context/Data.context";

import { Select, SelectTrigger, SelectValue } from "../ui/select";

import SelectItems from "./SelectItems/CsvData";

interface Props {
	header: string;
	foreignKeys: string[];
}

const Selects = (props: Props): JSX.Element => {
	const data = useContext(DataContext);

	// Commonly auto-generated column names, can be overwritten by user
	const autoGenerated = ["id", "created_at", "updated_at"];

	const defaultVal = autoGenerated.includes(props.header) ? "auto_generated" : props.foreignKeys.includes(props.header) ? "foreign_key" : "not_set";

	return (
		<Select
			defaultValue={defaultVal}
			onValueChange={(newVal) => {
				const headerIndex = data.mapping.findIndex((el) => el[0] === props.header);

				if (headerIndex === -1) {
					data.setMapping([
						...data.mapping,
						[props.header, newVal, []],
					]);
				} else {
					const newMapping = [...data.mapping];
					newMapping[headerIndex] = [props.header, newVal, data.mapping[headerIndex][2]];

					data.setMapping(newMapping);
				}
			}}
		>
			<SelectTrigger>
				<SelectValue placeholder={defaultVal} />
			</SelectTrigger>

			<SelectItems defaultHeaders={true} />
		</Select>
	);
};

export default Selects;
